{"version":3,"sources":["Modal.js","context.js","SetupForm.js","Loading.js","App.js","index.js"],"names":["Modal","useGlobalContext","isModalOpen","closeModal","questions","correct","className","length","toFixed","onClick","table","sports","history","politics","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setloading","setCorrect","index","setIndex","setQuestions","error","setError","amount","category","difficulty","quiz","setQuiz","setIsModalOpen","fetchQuestions","url","a","axios","catch","console","log","response","data","results","nextQuestion","openModal","Provider","value","correctAnswer","answer","handleChange","e","name","target","handleSubmit","preventDefault","useContext","SetupForm","onSubmit","htmlFor","type","onChange","min","max","Loading","App","question","correct_answer","incorrect_answers","answers","random","Math","floor","push","dangerouslySetInnerHTML","__html","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b60f496.chunk.js","sourcesContent":["import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Modal = () => {\n  const{isModalOpen,closeModal,questions,correct} = useGlobalContext()\n  return <div className={isModalOpen?'modal-container isOpen':'modal-container'}>\n      <div className=\"modal-content\">\n        <h2>\n          Congrats\n        </h2>\n        <p>You answered correctly {((correct/questions.length)*100).toFixed(0)}% of questions</p>\n        <button className='close-btn' onClick={closeModal}>\n          play again\n        </button>\n      </div>\n  </div>\n}\n\nexport default Modal\n","import axios from 'axios'\nimport React, { useState, useContext, useEffect } from 'react'\nimport Modal from './Modal'\n\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n}\n\nconst API_ENDPOINT = 'https://opentdb.com/api.php?'\n\nconst tempUrl = 'https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple'\n\nconst AppContext = React.createContext()\nconst AppProvider = ({ children }) => {\n  const[waiting,setWaiting] = useState(true);\n  const[loading, setloading] = useState(true);\n  const [correct, setCorrect] = useState(0);\n  const[index,setIndex] = useState(0);\n  const [questions,setQuestions] = useState([]);\n  const[error,setError] = useState(false);\n  const[quiz,setQuiz] = useState({amount:10,category:'sports',difficulty:'easy'})\n  const [isModalOpen,setIsModalOpen] = useState(false)\n\n  const fetchQuestions= async(url)=>{\n    setloading(true)\n    setWaiting(false)\n   const response =  await axios(url).catch(()=>console.log(error));\n   if (response) {\n     const data = response.data.results\n     if (data.length>0) {\n       setQuestions(data)\n       setloading(false)\n       setWaiting(false)\n       setError(false)\n       console.log(data);\n    }\n    else{\n      setWaiting(true)\n      setError(true)\n    }\n  } \n   else {\n     setWaiting(true)\n   }\n  }\n  const nextQuestion=()=>{\n    setIndex(()=>{\n      if (index===questions.length-1) {\n        openModal()\n        return 0\n      }\n      else{\n        return index+1\n      }\n    })\n  }\n\n  const correctAnswer=(answer)=>{\n    if (answer) {\n      setCorrect(correct+1)\n    }\n    nextQuestion()\n  }\n\n  const openModal=()=>{\n    setIsModalOpen(true)\n  }\n\n  const closeModal=()=>{\n    setIsModalOpen(false)\n    setWaiting(true)\n    setCorrect(0)\n  }\n \n const handleChange=(e)=>{\n  const name = e.target.name\n  const value = e.target.value\n  setQuiz(...{[name]:value})\n }\n\n const handleSubmit=(e)=>{\n  e.preventDefault()\n  fetchQuestions(\n    `${API_ENDPOINT}amount=${quiz.amount}&difficulty=${quiz.difficulty}&category=${table[quiz.category]}&type=multiple`\n  );\n }\n\n  return <AppContext.Provider value={{error,waiting,loading,isModalOpen,questions,correct,index,nextQuestion,correctAnswer,closeModal,handleChange,handleSubmit,quiz}}>{children}</AppContext.Provider>\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst SetupForm = () => {\n  const { handleChange, handleSubmit, quiz, error } = useGlobalContext();\n  return (\n    <section className=\"quiz quiz-small\">\n      <form className=\"setup-form\" onSubmit={handleSubmit}>\n        {/* amount */}\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">Amount</label>\n          <input\n            type=\"text\"\n            name=\"amount\"\n            value={quiz.amount}\n            onChange={handleChange}\n            className=\"form-input\"\n            min={1}\n            max={50}\n          />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"category\">Category</label>\n          <select\n            name=\"category\"\n            className=\"form-input\"\n            value={quiz.category}\n            onChange={handleChange}\n          >\n            <option value=\"sports\">Sports</option>\n            <option value=\"politics\">Politics</option>\n            <option value=\"history\">History</option>\n          </select>\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"difficulty\">difficulty</label>\n          <select\n            name=\"difficulty\"\n            className=\"form-input\"\n            value={quiz.difficulty}\n            onChange={handleChange}\n          >\n            <option value=\"easy\">Easy</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"hard\">Hard</option>\n          </select>\n        </div>\n        {error && <p className='error'>can't genrate questions please try different options</p>}\n        <button className=\"submit-btn\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default SetupForm;\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { useGlobalContext } from './context'\nimport SetupForm from './SetupForm'\nimport Loading from './Loading'\nimport Modal from './Modal'\nfunction App() {\nconst{waiting,loading,index,questions,correct,nextQuestion,correctAnswer} = useGlobalContext()\nif (waiting) { \n  return <SetupForm/>\n}\nif (loading) {\n  return <Loading/>\n}\nconst{question,correct_answer,incorrect_answers} =  questions[index]\nconst answers = [...incorrect_answers]\nconst random = Math.floor(Math.random()*4)\nif (random===3) {\n  answers.push(correct_answer)\n}\nelse{\n  answers.push(answers[random])\n  answers[random] = correct_answer\n}\n  return <main>\n    <Modal/>\n    <section className=\"quiz\">\n    <p className=\"correct-answers\">\n      correct:{correct}/{index}\n    </p>\n    <article className=\"container\">\n      <h2 dangerouslySetInnerHTML={{__html:question}}/>\n      <div className=\"btn-container\">\n        {answers.map((answer,index)=>{\n          return <button key={index} className='answer-btn' onClick={()=>correctAnswer(correct_answer===answer)}>{answer}</button>\n        })}\n      </div>\n    </article>\n    <button className=\"next-question\" onClick={nextQuestion}>\n      Next Question\n    </button>\n    </section>\n  </main>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}